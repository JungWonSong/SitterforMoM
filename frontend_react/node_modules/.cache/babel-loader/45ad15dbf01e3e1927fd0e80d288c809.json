{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\DA118\\\\Desktop\\\\react\\\\sitter\\\\SitterforMoM\\\\frontend_react\\\\src\\\\pages\\\\Accounts\\\\SignIn.js\",\n    _s = $RefreshSig$();\n\n/*global Kakao */\n\n/*global naver */\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { setToekn, setId } from 'store';\nimport { useAppContext } from 'store';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\n\nconst SignIn = ({\n  match\n}) => {\n  _s();\n\n  const {\n    dispatch\n  } = useAppContext();\n  const history = useHistory();\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    //const script = document.createElement('script')\n    //script.src = 'https://developers.kakao.com/sdk/js/kakao.js'\n    //script.async = true\n    if (!Kakao.isInitialized()) {\n      Kakao.init('13fdd47dd448192e3f9b6d35e6960217');\n    } // SDK 초기화 여부를 판단합니다.\n\n\n    console.log(Kakao.isInitialized());\n    var naverLogin = new naver.LoginWithNaverId({\n      clientId: \"C_WSFE0_AkdBhEgMki93\",\n      callbackUrl: \"http://localhost:3000/accounts/signin\",\n      isPopup: false\n      /* 팝업을 통한 연동처리 여부 */\n      //loginButton: {color: \"green\", type: 3, height: 60} /* 로그인 버튼의 타입을 지정 */\n\n    });\n    /* 설정정보를 초기화하고 연동을 준비 */\n\n    naverLogin.init();\n    /* (4) Callback의 처리. 정상적으로 Callback 처리가 완료될 경우 main page로 redirect(또는 Popup close) */\n\n    window.addEventListener('load', function () {\n      naverLogin.getLoginStatus(function (status) {\n        if (status) {\n          var id = naverLogin.user.getId();\n          var nm = naverLogin.user.getName();\n          var gender = naverLogin.user.getGender();\n          var birthday = naverLogin.user.getBirthday();\n          var email = naverLogin.user.getEmail();\n          var isRequire = true;\n\n          if (nm === 'undefined' || nm === null || nm === '') {\n            alert('이름은 필수 정보입니다. 정보제공을 동의해주세요.');\n            isRequire = false;\n          } else if (email === 'undefined' || email === null || email === '') {\n            alert('이메일은 필수 정보입니다. 정보제공을 동의해주세요.');\n            isRequire = false;\n          }\n\n          if (isRequire === false) {\n            naverLogin.reprompt(); // 필수정보를 얻지 못 했을 때 다시 정보제공 동의 화면으로 이동\n\n            return;\n          }\n\n          console.log(id);\n        } else {\n          console.log(\"callback 처리에 실패하였습니다.\");\n        }\n      });\n    });\n    return () => {}; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const loginWithKakao = async e => {\n    try {\n      if (!Kakao) {\n        console.log(\"no kakao\");\n      }\n\n      Kakao.Auth.login({\n        success: auth => {\n          console.log(\"login success! \" + auth); //console.log( auth);\n\n          if (!Kakao.Auth.getAccessToken()) {\n            Kakao.Auth.setAccessToken(auth);\n          }\n\n          if (Kakao.Auth.getAccessToken()) {\n            console.log('logged in.');\n            Kakao.API.request({\n              url: '/v2/user/me',\n              success: function (response) {\n                var sPerson = JSON.stringify(response);\n                var oPerson = JSON.parse(sPerson);\n                console.log(oPerson.kakao_account.profile.nickname);\n                console.log(oPerson.kakao_account.profile.profile_image_url);\n              },\n              fail: function (error) {\n                console.log(error);\n              }\n            });\n          }\n        },\n        fail: err => {\n          console.error(err);\n        }\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const loginWithNaver = async e => {\n    try {\n      const response = await axios.get('allauth/naver/login/', {\n        withCredentials: true\n      });\n      console.log(response); // 로그인 완료 후 처리\n    } catch (e) {\n      console.log(\"###################\" + e);\n\n      if (e.response) {\n        const {\n          data\n        } = e.response;\n        console.error(data);\n      }\n    }\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault(); // formdata 정리\n\n    let formData = new FormData();\n    formData.append('username', e.target.username.value);\n    formData.append('password', e.target.password.value); // console.log(\"form data 확인\",e.target.username.value);\n    //console.log(\"form data 확인\",e.target.password.value);\n    // axios로 통신\n\n    try {\n      const response = await axios.post('/api/accounts/login/', formData); // console.log(response);\n      // 로그인 완료 후 처리\n\n      const {\n        data: {\n          token: jwtToken,\n          user: currentUserName\n        }\n      } = response;\n      const {\n        id: idT\n      } = currentUserName; //console.log('response 확인 ', currentUserName);\n\n      dispatch(setToekn(jwtToken));\n      dispatch(setId(idT));\n      history.push('/');\n    } catch (e) {\n      setShow(true);\n\n      if (e.response) {\n        const {\n          data\n        } = e.response;\n        console.error(data);\n      }\n    }\n  }; // eslint-disable-next-line no-undef\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"form-login\",\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"username\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"\\uC544\\uC774\\uB514\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }, this), show ? /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uD655\\uC778\\uD558\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 26\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \" \"\n        }, void 0, false), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-dark\",\n          type: \"submit\",\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"warning\",\n          onClick: loginWithKakao,\n          children: \"\\uCE74\\uCE74\\uC624 \\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"naverIdLogin\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            onClick: loginWithNaver,\n            children: \"\\uB124\\uC774\\uBC84 \\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: loginWithNaver,\n          children: \"\\uAD6C\\uAE00 \\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 17\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/accounts/UserJoin\",\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785 /\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 17\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 62\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignIn, \"28irwO4a5q/nL3bU8Dd1xhX2QvI=\", false, function () {\n  return [useAppContext, useHistory];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/DA118/Desktop/react/sitter/SitterforMoM/frontend_react/src/pages/Accounts/SignIn.js"],"names":["axios","React","useState","useEffect","useHistory","setToekn","setId","useAppContext","Link","Button","Form","Alert","SignIn","match","dispatch","history","show","setShow","Kakao","isInitialized","init","console","log","naverLogin","naver","LoginWithNaverId","clientId","callbackUrl","isPopup","window","addEventListener","getLoginStatus","status","id","user","getId","nm","getName","gender","getGender","birthday","getBirthday","email","getEmail","isRequire","alert","reprompt","loginWithKakao","e","Auth","login","success","auth","getAccessToken","setAccessToken","API","request","url","response","sPerson","JSON","stringify","oPerson","parse","kakao_account","profile","nickname","profile_image_url","fail","error","err","loginWithNaver","get","withCredentials","data","onSubmit","preventDefault","formData","FormData","append","target","username","value","password","post","token","jwtToken","currentUserName","idT","push"],"mappings":";;;;;;AACA;;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,OAA9B;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;AAKA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA;;AACxB,QAAM;AAACC,IAAAA;AAAD,MAAaP,aAAa,EAAhC;AACA,QAAMQ,OAAO,GAAGX,UAAU,EAA1B;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,KAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA;AACA;AAEA,QAAG,CAACe,KAAK,CAACC,aAAN,EAAJ,EAA2B;AACvBD,MAAAA,KAAK,CAACE,IAAN,CAAW,kCAAX;AACH,KAPW,CAQZ;;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACC,aAAN,EAAZ;AAEA,QAAII,UAAU,GAAG,IAAIC,KAAK,CAACC,gBAAV,CACb;AACIC,MAAAA,QAAQ,EAAE,sBADd;AAEIC,MAAAA,WAAW,EAAE,uCAFjB;AAGIC,MAAAA,OAAO,EAAE;AAAO;AAChB;;AAJJ,KADa,CAAjB;AASA;;AACAL,IAAAA,UAAU,CAACH,IAAX;AAEA;;AACNS,IAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,YAAY;AAClCP,MAAAA,UAAU,CAACQ,cAAX,CAA0B,UAAUC,MAAV,EAAkB;AACxC,YAAIA,MAAJ,EAAY;AACR,cAAIC,EAAE,GAAKV,UAAU,CAACW,IAAX,CAAgBC,KAAhB,EAAX;AACA,cAAIC,EAAE,GAAKb,UAAU,CAACW,IAAX,CAAgBG,OAAhB,EAAX;AACA,cAAIC,MAAM,GAAIf,UAAU,CAACW,IAAX,CAAgBK,SAAhB,EAAd;AACA,cAAIC,QAAQ,GAAGjB,UAAU,CAACW,IAAX,CAAgBO,WAAhB,EAAf;AACA,cAAIC,KAAK,GAAInB,UAAU,CAACW,IAAX,CAAgBS,QAAhB,EAAb;AAEA,cAAIC,SAAS,GAAG,IAAhB;;AACA,cAAGR,EAAE,KAAK,WAAP,IAAsBA,EAAE,KAAK,IAA7B,IAAqCA,EAAE,KAAK,EAA/C,EAAmD;AAC/CS,YAAAA,KAAK,CAAC,6BAAD,CAAL;AACAD,YAAAA,SAAS,GAAG,KAAZ;AACH,WAHD,MAGO,IAAGF,KAAK,KAAK,WAAV,IAAyBA,KAAK,KAAK,IAAnC,IAA2CA,KAAK,KAAK,EAAxD,EAA4D;AAC/DG,YAAAA,KAAK,CAAC,8BAAD,CAAL;AACAD,YAAAA,SAAS,GAAG,KAAZ;AACH;;AAGD,cAAGA,SAAS,KAAK,KAAjB,EAAwB;AACpBrB,YAAAA,UAAU,CAACuB,QAAX,GADoB,CACG;;AACvB;AACH;;AAEDzB,UAAAA,OAAO,CAACC,GAAR,CAAYW,EAAZ;AACH,SAvBD,MAuBO;AACHZ,UAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH;AACJ,OA3BD;AA4BH,KA7BP;AA+BI,WAAO,MAAM,CACZ,CADD,CAvDc,CA0DhB;AACC,GA3DQ,EA2DN,EA3DM,CAAT;;AA6DA,QAAMyB,cAAc,GAAE,MAAOC,CAAP,IAAa;AAC/B,QAAG;AACC,UAAG,CAAC9B,KAAJ,EAAW;AACPG,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH;;AACDJ,MAAAA,KAAK,CAAC+B,IAAN,CAAWC,KAAX,CAAiB;AACbC,QAAAA,OAAO,EAAEC,IAAD,IAAU;AACd/B,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoB8B,IAAhC,EADc,CAEd;;AACA,cAAI,CAAClC,KAAK,CAAC+B,IAAN,CAAWI,cAAX,EAAL,EAAkC;AAC9BnC,YAAAA,KAAK,CAAC+B,IAAN,CAAWK,cAAX,CAA0BF,IAA1B;AACH;;AAED,cAAIlC,KAAK,CAAC+B,IAAN,CAAWI,cAAX,EAAJ,EAAiC;AAC7BhC,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAJ,YAAAA,KAAK,CAACqC,GAAN,CAAUC,OAAV,CAAkB;AACdC,cAAAA,GAAG,EAAE,aADS;AAEdN,cAAAA,OAAO,EAAE,UAASO,QAAT,EAAmB;AACxB,oBAAIC,OAAO,GAAGC,IAAI,CAACC,SAAL,CAAeH,QAAf,CAAd;AACA,oBAAII,OAAO,GAAGF,IAAI,CAACG,KAAL,CAAWJ,OAAX,CAAd;AACAtC,gBAAAA,OAAO,CAACC,GAAR,CAAYwC,OAAO,CAACE,aAAR,CAAsBC,OAAtB,CAA8BC,QAA1C;AACA7C,gBAAAA,OAAO,CAACC,GAAR,CAAYwC,OAAO,CAACE,aAAR,CAAsBC,OAAtB,CAA8BE,iBAA1C;AACH,eAPa;AAQdC,cAAAA,IAAI,EAAE,UAASC,KAAT,EAAgB;AAClBhD,gBAAAA,OAAO,CAACC,GAAR,CAAY+C,KAAZ;AACH;AAVa,aAAlB;AAaH;AACJ,SAxBY;AAyBbD,QAAAA,IAAI,EAAGE,GAAD,IAAS;AACXjD,UAAAA,OAAO,CAACgD,KAAR,CAAcC,GAAd;AACH;AA3BY,OAAjB;AA6BH,KAjCD,CAiCE,OAAMA,GAAN,EAAW;AACTjD,MAAAA,OAAO,CAACC,GAAR,CAAYgD,GAAZ;AACH;AACJ,GArCD;;AAuCA,QAAMC,cAAc,GAAE,MAAOvB,CAAP,IAAa;AAC/B,QAAI;AACC,YAAMU,QAAQ,GAAG,MAAM1D,KAAK,CAACwE,GAAN,CAAU,sBAAV,EAAkC;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OAAlC,CAAvB;AACDpD,MAAAA,OAAO,CAACC,GAAR,CAAYoC,QAAZ,EAFA,CAGA;AACC,KAJL,CAIM,OAAOV,CAAP,EAAU;AACR3B,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAuB0B,CAAnC;;AACA,UAAIA,CAAC,CAACU,QAAN,EAAgB;AACZ,cAAM;AAAEgB,UAAAA;AAAF,YAAW1B,CAAC,CAACU,QAAnB;AACArC,QAAAA,OAAO,CAACgD,KAAR,CAAcK,IAAd;AACH;AACJ;AACR,GAZD;;AAcA,QAAMC,QAAQ,GAAG,MAAO3B,CAAP,IAAa;AAC1BA,IAAAA,CAAC,CAAC4B,cAAF,GAD0B,CAE1B;;AACA,QAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4B/B,CAAC,CAACgC,MAAF,CAASC,QAAT,CAAkBC,KAA9C;AACAL,IAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA2B/B,CAAC,CAACgC,MAAF,CAASG,QAAT,CAAkBD,KAA7C,EAL0B,CAO3B;AACC;AACA;;AACA,QAAI;AACA,YAAMxB,QAAQ,GAAG,MAAM1D,KAAK,CAACoF,IAAN,CAAW,sBAAX,EAAmCP,QAAnC,CAAvB,CADA,CAED;AACC;;AACA,YAAM;AACFH,QAAAA,IAAI,EAAE;AAAEW,UAAAA,KAAK,EAAEC,QAAT;AACEpD,UAAAA,IAAI,EAAEqD;AADR;AADJ,UAGF7B,QAHJ;AAKA,YAAM;AACFzB,QAAAA,EAAE,EAAGuD;AADH,UAEFD,eAFJ,CATA,CAYA;;AACAzE,MAAAA,QAAQ,CAACT,QAAQ,CAACiF,QAAD,CAAT,CAAR;AACAxE,MAAAA,QAAQ,CAACR,KAAK,CAACkF,GAAD,CAAN,CAAR;AACAzE,MAAAA,OAAO,CAAC0E,IAAR,CAAa,GAAb;AACH,KAhBD,CAgBE,OAAOzC,CAAP,EAAU;AACR/B,MAAAA,OAAO,CAAC,IAAD,CAAP;;AACA,UAAI+B,CAAC,CAACU,QAAN,EAAgB;AACZ,cAAM;AAAEgB,UAAAA;AAAF,YAAW1B,CAAC,CAACU,QAAnB;AACArC,QAAAA,OAAO,CAACgD,KAAR,CAAcK,IAAd;AACH;AACJ;AACJ,GAjCD,CAvHwB,CA0JxB;;;AAIA,sBAEI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,YAAhB;AAA6B,QAAA,QAAQ,EAAEC,QAAvC;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,UAAtB;AAAA,iCACA,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,MAAnB;AAA0B,YAAA,WAAW,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,UAAtB;AAAA,iCACA,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,UAAnB;AAA8B,YAAA,WAAW,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBALJ,EAQK3D,IAAI,gBAAI,QAAC,KAAD;AAAO,UAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAJ,gBAAqD;AAAA;AAAA,yBAR9D,eAUI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,cAAhB;AAA+B,UAAA,IAAI,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAaI;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAcI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,OAAO,EAAE+B,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ,eAiBI;AAAK,UAAA,EAAE,EAAC,cAAR;AAAA,iCACA,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA0B,YAAA,OAAO,EAAEwB,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAjBJ,eAsBI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,QAAhB;AAAyB,UAAA,OAAO,EAAEA,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBJ,eAyBI;AAAA;AAAA;AAAA;AAAA,gBAzBJ,oBAyBW;AAAA;AAAA;AAAA;AAAA,gBAzBX,eA0BI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,oBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1BJ,oBA0BiD,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1BjD;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAoCH,CAlMD;;GAAM3D,M;UACiBL,a,EACHH,U;;;KAFdQ,M;AAmMN,eAAeA,MAAf","sourcesContent":["\r\n/*global Kakao */\r\n/*global naver */\r\nimport axios from 'axios';\r\nimport React, {useState, useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { setToekn, setId } from 'store';\r\nimport { useAppContext } from 'store';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\n\r\n\r\n\r\nconst SignIn = ({match}) => {\r\n    const {dispatch} = useAppContext();\r\n    const history = useHistory();\r\n    const [show, setShow] = useState(false);\r\n   \r\n    useEffect(() => {\r\n        //const script = document.createElement('script')\r\n        //script.src = 'https://developers.kakao.com/sdk/js/kakao.js'\r\n        //script.async = true\r\n    \r\n        if(!Kakao.isInitialized()) {\r\n            Kakao.init('13fdd47dd448192e3f9b6d35e6960217');\r\n        }\r\n        // SDK 초기화 여부를 판단합니다.\r\n        console.log(Kakao.isInitialized());\r\n\r\n        var naverLogin = new naver.LoginWithNaverId(\r\n            {\r\n                clientId: \"C_WSFE0_AkdBhEgMki93\",\r\n                callbackUrl: \"http://localhost:3000/accounts/signin\",\r\n                isPopup: false, /* 팝업을 통한 연동처리 여부 */\r\n                //loginButton: {color: \"green\", type: 3, height: 60} /* 로그인 버튼의 타입을 지정 */\r\n            }\r\n        );\r\n        \r\n        /* 설정정보를 초기화하고 연동을 준비 */\r\n        naverLogin.init();\r\n\r\n        /* (4) Callback의 처리. 정상적으로 Callback 처리가 완료될 경우 main page로 redirect(또는 Popup close) */\r\n\t\twindow.addEventListener('load', function () {\r\n            naverLogin.getLoginStatus(function (status) {\r\n                if (status) {\r\n                    var id\t\t\t= naverLogin.user.getId();\r\n                    var nm\t\t\t= naverLogin.user.getName();\r\n                    var gender\t\t= naverLogin.user.getGender();\r\n                    var birthday\t= naverLogin.user.getBirthday();\r\n                    var email\t\t= naverLogin.user.getEmail();\r\n                    \r\n                    var isRequire = true;\r\n                    if(nm === 'undefined' || nm === null || nm === '') {\r\n                        alert('이름은 필수 정보입니다. 정보제공을 동의해주세요.');\r\n                        isRequire = false;\r\n                    } else if(email === 'undefined' || email === null || email === '') {\r\n                        alert('이메일은 필수 정보입니다. 정보제공을 동의해주세요.');\r\n                        isRequire = false;\r\n                    }\r\n                    \r\n                    \r\n                    if(isRequire === false) {\r\n                        naverLogin.reprompt(); // 필수정보를 얻지 못 했을 때 다시 정보제공 동의 화면으로 이동\r\n                        return;\t\r\n                    }\r\n                    \r\n                    console.log(id);\r\n                } else {\r\n                    console.log(\"callback 처리에 실패하였습니다.\");\r\n                }\r\n            });\r\n        });\r\n\r\n      return () => {\r\n      };\r\n      \r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    \r\n    const loginWithKakao= async (e) => {\r\n        try{\r\n            if(!Kakao) {\r\n                console.log(\"no kakao\");\r\n            }\r\n            Kakao.Auth.login({\r\n                success:(auth) => {\r\n                    console.log(\"login success! \" + auth);\r\n                    //console.log( auth);\r\n                    if (!Kakao.Auth.getAccessToken()) {\r\n                        Kakao.Auth.setAccessToken(auth);\r\n                    }\r\n                    \r\n                    if (Kakao.Auth.getAccessToken()) {\r\n                        console.log('logged in.');\r\n                        Kakao.API.request({\r\n                            url: '/v2/user/me',\r\n                            success: function(response) {\r\n                                var sPerson = JSON.stringify(response);\r\n                                var oPerson = JSON.parse(sPerson);\r\n                                console.log(oPerson.kakao_account.profile.nickname);\r\n                                console.log(oPerson.kakao_account.profile.profile_image_url);\r\n                            },\r\n                            fail: function(error) {\r\n                                console.log(error);\r\n                            }\r\n                        });\r\n                        \r\n                    }\r\n                },\r\n                fail: (err) => {\r\n                    console.error(err);\r\n                }\r\n            })\r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    const loginWithNaver= async (e) => {\r\n        try {\r\n             const response = await axios.get('allauth/naver/login/', { withCredentials: true });\r\n            console.log(response);\r\n            // 로그인 완료 후 처리\r\n            } catch (e) {\r\n                console.log(\"###################\"+ e);\r\n                if (e.response) {\r\n                    const { data } = e.response;\r\n                    console.error(data);\r\n                }\r\n            }\r\n    };\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        // formdata 정리\r\n        let formData = new FormData(); \r\n        formData.append('username', e.target.username.value); \r\n        formData.append('password',e.target.password.value);\r\n\r\n       // console.log(\"form data 확인\",e.target.username.value);\r\n        //console.log(\"form data 확인\",e.target.password.value);\r\n        // axios로 통신\r\n        try {\r\n            const response = await axios.post('/api/accounts/login/', formData);\r\n           // console.log(response);\r\n            // 로그인 완료 후 처리\r\n            const {\r\n                data: { token: jwtToken,\r\n                        user: currentUserName }\r\n            } = response;\r\n            \r\n            const {\r\n                id : idT\r\n            } = currentUserName;\r\n            //console.log('response 확인 ', currentUserName);\r\n            dispatch(setToekn(jwtToken));\r\n            dispatch(setId(idT));\r\n            history.push('/');\r\n        } catch (e) {\r\n            setShow(true);\r\n            if (e.response) {\r\n                const { data } = e.response;\r\n                console.error(data);\r\n            }\r\n        }\r\n    };\r\n    \r\n    // eslint-disable-next-line no-undef\r\n    \r\n    \r\n    \r\n    return (\r\n\r\n        <div className=\"container-fluid\">\r\n        <div className=\"bg\">\r\n            <Form className=\"form-login\" onSubmit={onSubmit}>\r\n                <Form.Group controlId=\"username\">\r\n                <Form.Control type=\"text\" placeholder=\"아이디\"  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"password\">\r\n                <Form.Control type=\"password\" placeholder=\"비밀번호\"  />\r\n                </Form.Group>\r\n                {show ? (<Alert variant=\"danger\">비밀번호를 확인하세요.</Alert>) : (<> </>)}\r\n                \r\n                <Button variant=\"outline-dark\" type=\"submit\">\r\n                로그인\r\n                </Button>\r\n                <hr />\r\n                <Button variant=\"warning\" onClick={loginWithKakao}>\r\n                카카오 로그인\r\n                </Button>\r\n                <div id=\"naverIdLogin\">\r\n                <Button variant=\"success\" onClick={loginWithNaver}>\r\n                네이버 로그인\r\n                </Button>\r\n                </div>\r\n                <Button variant=\"danger\" onClick={loginWithNaver}>\r\n                구글 로그인\r\n                </Button>\r\n                <br /> <br /> \r\n                <Link to=\"/accounts/UserJoin\" >회원가입 /</Link> <Link to=\"\" >비밀번호 찾기</Link>\r\n            </Form>\r\n        </div>    \r\n        </div>\r\n        \r\n    );\r\n};\r\nexport default SignIn;\r\n"]},"metadata":{},"sourceType":"module"}