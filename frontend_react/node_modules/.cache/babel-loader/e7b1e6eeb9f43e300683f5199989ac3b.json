{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\DA118\\\\Desktop\\\\react\\\\sitter\\\\SitterforMoM\\\\frontend_react\\\\src\\\\pages\\\\Accounts\\\\SignIn.js\",\n    _s = $RefreshSig$();\n\n/*global Kakao*/\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { setToekn, setId } from 'store';\nimport { useAppContext } from 'store';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\n\nconst SignIn = () => {\n  _s();\n\n  const {\n    dispatch\n  } = useAppContext();\n  const history = useHistory();\n  const [show, setShow] = useState(false);\n\n  const kakaoLogin = async e => {\n    e.preventDefault();\n\n    try {\n      //axios.defaults.headers.common['access-control-allow-origin'] = '*';\n      const response = await axios.get('/accounts/kakao/');\n      console.log(response); // 로그인 완료 후 처리\n      // history.push('/');\n    } catch (e) {\n      if (e.response) {\n        const {\n          data\n        } = e.response;\n        console.error(data);\n      }\n    }\n  };\n\n  function loginWithKakao() {\n    Kakao.init('13fdd47dd448192e3f9b6d35e6960217'); // SDK 초기화 여부를 판단합니다.\n\n    console.log(Kakao.isInitialized());\n    Kakao.Auth.authorize({\n      redirectUri: 'http://localhost:3000'\n    }); // displayToken();\n  } // 아래는 데모를 위한 UI 코드입니다.\n\n\n  function displayToken() {\n    const token = getCookie('authorize-access-token');\n\n    if (token) {\n      Kakao.Auth.setAccessToken(token);\n      Kakao.Auth.getStatusInfo(({\n        status\n      }) => {\n        if (status === 'connected') {\n          document.getElementById('token-result').innerText = 'login success. token: ' + Kakao.Auth.getAccessToken();\n        } else {\n          Kakao.Auth.setAccessToken(null);\n        }\n      });\n    }\n  }\n\n  function getCookie(name) {\n    const value = \"; \" + document.cookie;\n    const parts = value.split(\"; \" + name + \"=\");\n    if (parts.length === 2) return parts.pop().split(\";\").shift();\n  }\n\n  const onSubmit = async e => {\n    e.preventDefault(); // formdata 정리\n\n    let formData = new FormData();\n    formData.append('username', e.target.username.value);\n    formData.append('password', e.target.password.value); // console.log(\"form data 확인\",e.target.username.value);\n    //console.log(\"form data 확인\",e.target.password.value);\n    // axios로 통신\n\n    try {\n      const response = await axios.post('/accounts/login/', formData); // console.log(response);\n      // 로그인 완료 후 처리\n\n      const {\n        data: {\n          token: jwtToken,\n          user: currentUserName\n        }\n      } = response;\n      const {\n        id: idT\n      } = currentUserName; //console.log('response 확인 ', currentUserName);\n\n      dispatch(setToekn(jwtToken));\n      dispatch(setId(idT));\n      history.push('/');\n    } catch (e) {\n      setShow(true);\n\n      if (e.response) {\n        const {\n          data\n        } = e.response;\n        console.error(data);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"form-login\",\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"username\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"\\uC544\\uC774\\uB514\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this), show ? /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uD655\\uC778\\uD558\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 26\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \" \"\n        }, void 0, false), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-dark\",\n          type: \"submit\",\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"warning\",\n          onClick: loginWithKakao,\n          children: \"\\uCE74\\uCE74\\uC624 \\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          children: \"\\uB124\\uC774\\uBC84 \\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/accounts/UserJoin\",\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785 /\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 62\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"token-result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignIn, \"wz1UtJa1LGEP4FVBqSQxfuTlj40=\", false, function () {\n  return [useAppContext, useHistory];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/DA118/Desktop/react/sitter/SitterforMoM/frontend_react/src/pages/Accounts/SignIn.js"],"names":["axios","React","useState","useHistory","setToekn","setId","useAppContext","Link","Button","Form","Alert","SignIn","dispatch","history","show","setShow","kakaoLogin","e","preventDefault","response","get","console","log","data","error","loginWithKakao","Kakao","init","isInitialized","Auth","authorize","redirectUri","displayToken","token","getCookie","setAccessToken","getStatusInfo","status","document","getElementById","innerText","getAccessToken","name","value","cookie","parts","split","length","pop","shift","onSubmit","formData","FormData","append","target","username","password","post","jwtToken","user","currentUserName","id","idT","push"],"mappings":"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","sourcesContent":["/*global Kakao*/\r\nimport axios from 'axios';\r\nimport React, {useState} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { setToekn, setId } from 'store';\r\nimport { useAppContext } from 'store';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nconst SignIn = () => {\r\n    const {dispatch} = useAppContext();\r\n    const history = useHistory();\r\n    const [show, setShow] = useState(false);\r\n   \r\n    const kakaoLogin = async (e) => {\r\n      e.preventDefault();\r\n\r\n      try {\r\n          //axios.defaults.headers.common['access-control-allow-origin'] = '*';\r\n          const response = await axios.get('/accounts/kakao/');\r\n          console.log(response);\r\n          // 로그인 완료 후 처리\r\n          \r\n          \r\n         // history.push('/');\r\n      } catch (e) {\r\n          if (e.response) {\r\n              const { data } = e.response;\r\n              console.error(data);\r\n          }\r\n      }\r\n  }\r\n\r\n    function loginWithKakao() {\r\n        Kakao.init('13fdd47dd448192e3f9b6d35e6960217');\r\n\r\n        // SDK 초기화 여부를 판단합니다.\r\n        console.log(Kakao.isInitialized());\r\n        \r\n        Kakao.Auth.authorize({\r\n          redirectUri: 'http://localhost:3000'\r\n        })\r\n\r\n       // displayToken();\r\n      }\r\n      // 아래는 데모를 위한 UI 코드입니다.\r\n     \r\n      function displayToken() {\r\n        const token = getCookie('authorize-access-token')\r\n        if(token) {\r\n          Kakao.Auth.setAccessToken(token)\r\n          Kakao.Auth.getStatusInfo(({ status }) => {\r\n            if(status === 'connected') {\r\n              document.getElementById('token-result').innerText = 'login success. token: ' + Kakao.Auth.getAccessToken()\r\n            } else {\r\n              Kakao.Auth.setAccessToken(null)\r\n            }\r\n          })\r\n        }\r\n      }\r\n      function getCookie(name) {\r\n        const value = \"; \" + document.cookie;\r\n        const parts = value.split(\"; \" + name + \"=\");\r\n        if (parts.length === 2) return parts.pop().split(\";\").shift();\r\n      }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        // formdata 정리\r\n        let formData = new FormData(); \r\n        formData.append('username', e.target.username.value); \r\n        formData.append('password',e.target.password.value);\r\n\r\n       // console.log(\"form data 확인\",e.target.username.value);\r\n        //console.log(\"form data 확인\",e.target.password.value);\r\n        // axios로 통신\r\n        try {\r\n            const response = await axios.post('/accounts/login/', formData);\r\n           // console.log(response);\r\n            // 로그인 완료 후 처리\r\n            const {\r\n                data: { token: jwtToken,\r\n                        user: currentUserName }\r\n            } = response;\r\n            \r\n            const {\r\n                id : idT\r\n            } = currentUserName;\r\n            //console.log('response 확인 ', currentUserName);\r\n            dispatch(setToekn(jwtToken));\r\n            dispatch(setId(idT));\r\n            history.push('/');\r\n        } catch (e) {\r\n            setShow(true);\r\n            if (e.response) {\r\n                const { data } = e.response;\r\n                console.error(data);\r\n            }\r\n        }\r\n    };\r\n    \r\n    \r\n    \r\n    return (\r\n        <div className=\"container-fluid\">\r\n        <div className=\"bg\">\r\n            <Form className=\"form-login\" onSubmit={onSubmit}>\r\n                <Form.Group controlId=\"username\">\r\n                <Form.Control type=\"text\" placeholder=\"아이디\"  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"password\">\r\n                <Form.Control type=\"password\" placeholder=\"비밀번호\"  />\r\n                </Form.Group>\r\n                {show ? (<Alert variant=\"danger\">비밀번호를 확인하세요.</Alert>) : (<> </>)}\r\n                \r\n                <Button variant=\"outline-dark\" type=\"submit\">\r\n                로그인\r\n                </Button>\r\n                <hr />\r\n                <Button variant=\"warning\" onClick={loginWithKakao} >\r\n                카카오 로그인\r\n                </Button>\r\n                <Button variant=\"success\" >\r\n                네이버 로그인\r\n                </Button>\r\n                <br /> <br /> \r\n                <Link to=\"/accounts/UserJoin\" >회원가입 /</Link> <Link to=\"\" >비밀번호 찾기</Link>\r\n            </Form>\r\n        </div>    \r\n        <div id=\"token-result\"></div>\r\n        </div>\r\n        \r\n    );\r\n};\r\nexport default SignIn;\r\n"]},"metadata":{},"sourceType":"module"}